<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <LangVersion>default</LangVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Title>CoreRemoting</Title>
        <Authors>Hagen Siegel</Authors>
        <Description>Easy to use Remoting library for .NET Core and .NET Framework</Description>
        <Copyright>2024 Hagen Siegel</Copyright>
        <PackageTags>Remoting RPC Network</PackageTags>
        <Company>Hagen Siegel</Company>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <TargetFramework>netstandard2.0</TargetFramework>
        <PackageProjectUrl>https://github.com/theRainbird/CoreRemoting</PackageProjectUrl>
        <PackageLicenseUrl></PackageLicenseUrl>
        <RepositoryUrl>https://github.com/theRainbird/CoreRemoting.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageVersion>1.2.1.0</PackageVersion>
        <PackageReleaseNotes>- Change default serializer to BSON to align with non-classic API's default
- Change default channel to TCP to align with non-classic API's default
- Implement TCP channel recognition from Classic Remoting API configuration
- Preventing Leakage of the Remoting Session
- Use Async methods for WatsonTCP
- Replace obsolete methods for Aes encryption
- Remove RemotingSession in a separate task
- Avoid nested envelopes
- RemotingSession shouldn't overwrite the serialized exception with an empty MessageCallResult message.
- Try to keep useful information from the non-serializable exceptions.
- Fix a hang due to a WireMessage deserialization error.
- Demonstrate failing event dispatch when one of the clients disconnects unexpectedly.
- Don't try to dispatch the client events to a disposed remoting session.
- Try your best not to fail event dispatch even if the client had power failure</PackageReleaseNotes>
    </PropertyGroup>

    <PropertyGroup>
      <NoWarn>$(NoWarn),NU1701,NU1903</NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <DocumentationFile>bin\Debug\CoreRemoting.xml</DocumentationFile>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <DocumentationFile>bin\Release\CoreRemoting.xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
      <PackageReference Include="Castle.Windsor" Version="6.0.0" />
      <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.2" />
      <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
      <PackageReference Include="Newtonsoft.Json.Bson" Version="1.0.3" />
      <PackageReference Include="Serialize.Linq" Version="3.1.160" />
      <PackageReference Include="stakx.DynamicProxy.AsyncInterceptor" Version="0.1.0" />
      <PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.2" />
      <PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
      <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0" />
      <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
      <PackageReference Include="System.Security.Cryptography.Algorithms" Version="4.3.1" />
      <PackageReference Include="System.Security.Cryptography.Cng" Version="5.0.0" />
      <PackageReference Include="System.Security.Cryptography.OpenSsl" Version="5.0.0" />
      <PackageReference Include="System.Security.Principal.Windows" Version="5.0.0" />
      <PackageReference Include="WatsonTcp" Version="6.0.8" />
    </ItemGroup>

    <ItemGroup>
      <Protobuf Include="**/*.proto" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="Toolbox\Disposable.Async.cs" />
    </ItemGroup>

</Project>
